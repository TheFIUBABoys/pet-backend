#%RAML 0.8
title: pet-backend API
baseUri: http://localhost:8000/
version: v0.1
/users:
  post:
    description: Sign Up to the app using email, password and password confirmation or facebook_id and facebook_token.
    body:
      application/json:
        example: |
          {
            "user":
              {
                "email": "gonchu.b@gmail.com",
                "password": "admin1234",
                "password_confirmation": "admin1234"
              }
           }

          {
            "user": {
              "facebook_id": "1234",
              "facebook_token": "4567"
            }
          }
    responses:
      200:
        body:
          application/json:
              example: |
                {
                  "id": 13,
                  "created_at": "2015-09-09T00:17:08.293Z",
                  "facebook_id": null,
                  "authentication_token": "EBknxu26nKmxuzx_xxx2"
                }
      422:
        description: Will return error code 422 when fields are missing or email is already taken
        body:
          application/json:
            example: |
              { "errors":{ "email":["has already been taken"]}}
              { "errors":{ "email":["can't be blank"]}}
              { "errors":{ "facebook_id":["has already been taken"]}}
              { "errors":{ "facebook_id":["can't be blank"]}}
  put:
    description: Update the user given by the user_token.
    body:
      application/json:
        example: |
          {
            "user":
              {
                "email": "gonchu.b@gmail.com",
                "phone": "12345678",
                "location": "12.0,11.876",
                "first_name": "Gonzalo",
                "last_name": "Beviglia",
                "device_id": "123asdads123"
              }
           }
    responses:
      200:
        body:
          application/json:
              example: |
                {
                  "id": 1,
                  "created_at": "2015-09-15T02:53:04.119Z",
                  "email": "gonchu.b@gmail.com",
                  "facebook_id": null,
                  "authentication_token": "mwknzg6sExqRh-wAsF1s",
                  "full_name": "Gonzalo Beviglia",
                  "first_name": "Gonzalo",
                  "last_name": "Beviglia",
                  "location": "12.0,11.876",
                  "phone": "12345678"
                }
      401:
        description: Will return error code 401 when no user is found with the given token.
  /sign_in:
    post:
      description: Sign In to the app using email and password or facebook_token and facebook_id
      body:
        application/json:
          example: |
            {
              "user": {
                "email": "gonchu.b@gmail.com",
                "password": "admin1234"
              }
            }
            {
              "user": {
                "facebook_id": "1234",
                "facebook_token": "4567"
              }
            }
      responses:
        200:
          body:
            application/json:
                example: |
                  {
                    "id": 6,
                    "email": "gonchu.b@gmail.com",
                    "created_at": "2015-09-08T01:45:42.216Z",
                    "updated_at": "2015-09-09T00:31:34.644Z",
                    "facebook_id": null,
                    "facebook_token": null,
                    "authentication_token": "K62wJZYwP7KNMUBAQMp9"
                   }
        422:
          description: Will return error code 422 when credentials are invalid
          body:
            application/json:
              example: |
                { "error": "Invalid email or password." }
                { "error": "Invalid id or token" }
/pets:
  post:
    description: Create pet and publish it in the app
    body:
      application/json:
        example: |
          {
            "pet": {
              "type": "Cat",
              "name": "John",
              "description": "Very nice cat.",
              "published": true,
              "gender": "male"
              "publication_type": "adoption"
              "videos": ["https://www.youtube.com/watch?v=TwyDC1ib8dc"]
            }
          }

          {
            "pet": {
              "type": "Dog",
              "name": "Steve",
              "gender": "female",
              "description": "Very nice dog.",
              "published": true,
              location: "127.1,-12.0",
              "colors": "gray white",
              "metadata": "handsome",
              "publication_type": "lost"
            }
          }

          {
            "pet": {
              "type": "Dog",
              "name": "Steve",
              "gender": "female",
              "description": "Very nice dog.",
              "published": true,
              location: "127.1,-12.0",
              "colors": "gray white",
              "metadata": "handsome",
              "publication_type": "found"
            }
          }
    responses:
      201:
        body:
          application/json:
              example: |
                {
                  "id": 6,
                  "type": "Cat",
                  "name": "John",
                  "description": "Very nice cat.",
                  "published":false,
                  "needs_transit_home":false,
                  "created_at": "2015-09-15T03:02:16.890Z",
                  "updated_at": "2015-09-15T03:02:16.890Z",
                  "images": [],
                  "videos": [
                    {
                      "id": 5,
                      "url": "https://www.youtube.com/watch?v=TwyDC1ib8dc"
                    }
                  ]
                }
  get:
    description: Search for pets (only shows published pets)
    queryParameters:
      limit:
        displayName: limit
        type: number
        description: The max amount of pets you want in your response.
        example: 5
        required: false
      type:
        displayName: pet type
        type: string
        description: The type of pet.
        example: "Cat"
        required: false
      needs_transit_home:
        displayName: transit home
        type: boolean
        description: Whether the pets need transit home or not.
        example: true
        required: false
      pet_friendly:
        displayName: pet friendly
        type: boolean
        description: Whether the pets are good with other pets
        example: true
        required: false
      children_friendly:
        displayName: children friendly
        type: boolean
        description: Whether the pets are good with children
        example: true
        required: false
      vaccinated:
        displayName: vaccinated
        type: boolean
        description: Search by vaccination status.
        example: true
        required: false
      user_id:
        displayName: user id
        type: number
        description: The id of the user whose pets you want to search for.
        example: true
        required: false
      gender:
        displayName: gender
        type: string
        description: The gender of the pets to be returned (male or female).
        example: "male"
        required: false
      colors:
        displayName: colors
        type: string
        description: The colors that pets should have (they should have all of them).
        example: "black white"
        required: false
      metadata:
        displayName: metadata
        type: string
        description: Metadata to search pets. If it matches any of the metadata words, the pet is returned.
        example: "gato macho"
        required: false
      publication_type:
        displayName: publication_type
        type: string
        description: Type of publication. Could be one of: "adoption", "lost", "found"
        example: "lost"
        required: false
      with_adoption_requests:
        displayName: with_adoption_requests
        type: boolean
        description: Only retrieve pets with adoption requests.
        example: true
        required: false
      adopted:
        displayName: adopted
        type: boolean
        description: Only retrieve pets with approved adoption requests.
        example: true
        required: false
      adopted_by_me:
        displayName: adopted_by_me
        type: boolean
        description: Only retrieve pets that the current user has requested adoption and were approved.
        example: true
        required: false
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": 6,
                "type": "Cat",
                "name": "John",
                "description": "Very nice cat.",
                "published": false,
                "needs_transit_home": false,
                "created_at": "2015-09-15T03:02:16.890Z",
                "updated_at": "2015-09-15T03:02:16.890Z",
                "images": [],
                "videos": [
                  {
                    "id": 5,
                    "url": "https://www.youtube.com/watch?v=TwyDC1ib8dc"
                  }
                ]
              }
  /{id}:
    get:
      description: Get the pet specified by the id.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 2,
                  "type": "Cat",
                  "name": "John",
                  "age": null,
                  "description": "Very nice cat.",
                  "published": true,
                  "vaccinated": false,
                  "needs_transit_home": false,
                  "created_at": "2015-10-04T16:13:20.671Z",
                  "updated_at": "2015-10-04T16:13:20.671Z",
                  "user_id": 3,
                  "location": "",
                  "metadata": "gato macho very nice cat.",
                  "colors": "",
                  "gender": "male",
                  "images": [
                    {
                      "id": 2,
                      "original_url": "http://localhost:8000/system/pet_images/images/000/000/002/original/Front.png?1443975218",
                      "medium_url": "http://localhost:8000/system/pet_images/images/000/000/002/medium/Front.png?1443975218",
                      "thumb_url": "http://localhost:8000/system/pet_images/images/000/000/002/thumb/Front.png?1443975218"
                    }
                  ],
                  "videos": [
                    {
                      "id": 5,
                      "url": "https://www.youtube.com/watch?v=TwyDC1ib8dc"
                    }
                  ],
                  "questions": [
                    {
                      "id": 1,
                      "body": "Consume alimento especial?",
                      "created_at": "2015-10-04T16:15:37.305Z",
                      "user": {
                        "id": 3,
                        "full_name": "Gonzalo Beviglia"
                      }
                    },
                    {
                      "id": 2,
                      "body": "Consume alimento especial?",
                      "created_at": "2015-10-04T16:16:17.365Z",
                      "user": {
                        "id": 3,
                        "full_name": "Gonzalo Beviglia"
                      },
                      "answer": {
                        "id": 1,
                        "body": "No",
                        "created_at": "2015-10-04T16:25:03.284Z"
                      }
                    }
                  ]
                }
        404:
          description: Will return a 404 status if the pet is not found.
    put:
      description: Update the pet specified by the id.
      body:
        application/json:
          example: |
            {
              "pet": {
                "vaccinaated": false
              }
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id":11,
                  "type":"Cat",
                  "name":"John",
                  "description":"hlo",
                  "published":true,
                  "vaccinated":true,
                  "needs_transit_home":false,
                  "created_at":"2015-09-15T04:21:52.311Z",
                  "updated_at":"2015-09-23T00:17:52.432Z",
                  "user_id":1,
                  "location":"127,2",
                  "metadata":"gato macho black gray handsome",
                  "colors":"black gray",
                  "gender":"male"
                }
        404:
          description: Will return a 404 status if the pet is not found.
    delete:
      description: Delete the pet specified by the id.
      responses:
        204:
          description: Will return a 204 with no content.
        404:
          description: Will return a 404 status if the pet is not found.
    /images:
      post:
        description: Add a photo to the given pet.
        body:
          application/file:
            example: Upload the image in a param named "pet_image[image]"
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "id":6,
                    "original_url":"http://localhost:8000/system/pet_images/images/000/000/006/original/imagereq.png?1443043475",
                    "medium_url":"http://localhost:8000/system/pet_images/images/000/000/006/medium/imagereq.png?1443043475",
                    "thumb_url":"http://localhost:8000/system/pet_images/images/000/000/006/thumb/imagereq.png?1443043475"
                  }
          404:
            description: Will return a 404 status if the pet is not found.
      /{image_id}:
        get:
          description: Get the photo urls.
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "id":6,
                      "original_url":"http://localhost:8000/system/pet_images/images/000/000/006/original/imagereq.png?1443043475",
                      "medium_url":"http://localhost:8000/system/pet_images/images/000/000/006/medium/imagereq.png?1443043475",
                      "thumb_url":"http://localhost:8000/system/pet_images/images/000/000/006/thumb/imagereq.png?1443043475"
                    }
            404:
              description: Will return a 404 status if the photo is not found.
        delete:
          description: Delete the photo.
          responses:
            204:
              description: Will return a 204 with no content.
            404:
              description: Will return a 404 status if the photo is not found.
    /questions:
      get:
        description: Get questions belonging to the pet.
        responses:
          200:
            body:
              application/json:
                example: |
                  [
                    {
                      "id": 1,
                      "body": "Consume alimento especial?",
                      "created_at": "2015-10-04T16:15:37.305Z",
                      "user": {
                        "id": 3,
                        "full_name": "Gonzalo Beviglia"
                      }
                    },
                    {
                      "id": 2,
                      "body": "Consume alimento especial?",
                      "created_at": "2015-10-04T16:16:17.365Z",
                      "user": {
                        "id": 3,
                        "full_name": "Gonzalo Beviglia"
                      },
                      "answer": {
                        "id": 1,
                        "body": "No",
                        "created_at": "2015-10-04T16:25:03.284Z"
                      }
                    }
                  ]
      post:
        description: Ask a question about a pet.
        body:
          application/json:
            example: |
              { "pet_question": { "body": "Consume alimento especial?" } }
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "id": 1,
                    "body": "Consume alimento especial?",
                    "created_at": "2015-10-13T04:04:13.930Z",
                    "user": {
                      "id": 2,
                      "full_name": ""
                    }
                  }
    /adoption_requests:
      post:
        description: Request the adoption of the pet.
        responses:
          201:
            description: Adoption was requested.
      get:
        description: Get the pet's adoption requests.
        responses:
          200:
            body:
              application/json:
                example: |
                  [
                    {
                      "approved": false,
                      "user": {
                        "id": 2,
                        "created_at": "2015-10-13T03:35:56.452Z",
                        "email": "ariley@topicware.biz",
                        "facebook_id": null,
                        "authentication_token": "oVhQy16nDpXgmCsExLLB",
                        "full_name": "",
                        "first_name": null,
                        "last_name": null,
                        "location": null,
                        "phone": null
                      }
                    }
                  ]
  /top:
    get:
      description: Get top 5 pets.
      responses:
        200:
          body:
            application/json:
              example: |
                [
                  {
                    "id":11,
                    "type":"Cat",
                    "gender":"male",
                    "name":"John",
                    "description":"hlo",
                    "published":true,
                    "needs_transit_home":false,
                    "created_at":"2015-09-15T04:21:52.311Z",
                    "updated_at":"2015-09-20T19:16:19.167Z",
                    "user_id":1,
                    "location":"127,2",
                    "url":"http://localhost:8000/pets/11.json"
                   },
                   {
                    "id":8,
                    "type":"Cat",
                    "gender":"male",
                    "name":"John",
                    "description":"Very nice cat.",
                    "published":true,
                    "needs_transit_home":false,
                    "created_at":"2015-09-15T03:26:02.572Z",
                    "updated_at":"2015-09-15T03:35:07.761Z",
                    "user_id":1,
                    "location":"12,-12.0",
                    "url":"http://localhost:8000/pets/8.json"
                   }
                ]
