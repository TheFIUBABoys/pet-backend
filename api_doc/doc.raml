#%RAML 0.8
title: pet-backend API
baseUri: http://localhost:8000/
version: v0.1
/users:
  post:
    description: Sign Up to the app using email, password and password confirmation or facebook_id and facebook_token.
    body:
      application/json:
        example: |
          { "user": { "email": "gonchu.b@gmail.com", "password": "admin1234", "password_confirmation": "admin1234" } }
          { "user": { "facebook_id": "1234", "facebook_token": "4567" } }
    responses:
      200:
        body:
          application/json:
              example: |
                { "id": 13,"created_at": "2015-09-09T00:17:08.293Z", "facebook_id": null,"authentication_token": "EBknxu26nKmxuzx_xxx2" }
      422:
        description: Will return error code 422 when fields are missing or email is already taken
        body:
          application/json:
            example: |
              { "errors":{ "email":["has already been taken"]}}
              { "errors":{ "email":["can't be blank"]}}
              { "errors":{ "facebook_id":["has already been taken"]}}
              { "errors":{ "facebook_id":["can't be blank"]}}
  /sign_in:
    post:
      description: Sign In to the app using email and password or facebook_token and facebook_id
      body:
        application/json:
          example: |
            { "user": { "email": "gonchu.b@gmail.com", "password": "admin1234" } }
            { "user": { "facebook_id": "1234", "facebook_token": "4567" } }
      responses:
        200:
          body:
            application/json:
                example: |
                  { "id": 6,"email": "gonchu.b@gmail.com", "created_at": "2015-09-08T01:45:42.216Z", "updated_at": "2015-09-09T00:31:34.644Z", "facebook_id": null,"facebook_token": null,"authentication_token": "K62wJZYwP7KNMUBAQMp9" }
        422:
          description: Will return error code 422 when credentials are invalid
          body:
            application/json:
              example: |
                { "error": "Invalid email or password." }
                { "error": "Invalid id or token" }
  /pets:
    post:
      description: Create pet and (optionally) publish it in the app
      body:
        application/json:
          example: |
            { "pet": { "type": "Cat", "name": "John", "description": "Very nice cat.", "needs_transit_home": true, location: "127.1,-12.0" } }
            { "pet": { "type": "Dog", "name": "Steve", "description": "Very nice dog.", "published": true, location: "127.1,-12.0" } }
      responses:
        200:
          body:
            application/json:
                example: |
                  { "id": 6,"type": "Cat", "name": "John", "description": "Very nice cat.", "published":false,"needs_transit_home":false,"created_at": "2015-09-15T03:02:16.890Z", "updated_at": "2015-09-15T03:02:16.890Z" }
    get:
      description: Search for pets
      queryParameters:
        limit:
          displayName: limit
          type: number
          description: The max amount of pets you want in your response.
          example: 5
          required: false
        type:
          displayName: pet type
          type: string
          description: The type of pet.
          example: "Cat"
          required: false
        needs_transit_home:
          displayName: transit home
          type: boolean
          description: Whether the pets need transit home or not.
          example: true
          required: false
        published:
          displayName: published
          type: boolean
          description: Search by published status.
          example: true
          required: false
        user_id:
          displayName: user id
          type: number
          description: The id of the user whose pets you want to search for.
          example: true
          required: false
      responses:
        200:
          body:
            application/json:
                example: |
                  { "id": 6,"type": "Cat", "name": "John", "description": "Very nice cat.", "published": false, "needs_transit_home": false, "created_at": "2015-09-15T03:02:16.890Z", "updated_at": "2015-09-15T03:02:16.890Z" }
